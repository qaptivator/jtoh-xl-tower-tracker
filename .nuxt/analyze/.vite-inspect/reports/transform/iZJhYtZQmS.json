{
  "resolvedId": "C:/Users/Andrew/Documents/GitHub/jtoh-xl-tower-tracker/utils/roblox.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import axios from \"axios\";\r\n\r\nexport type UserBadgeInfo = {\r\n  badgeId: number;\r\n  awardedDate: Date;\r\n};\r\n\r\nexport async function getUsernameFromId(userId: number): Promise<string> {\r\n  const res: any = await axios\r\n    .get(`https://users.roproxy.com/v1/users/${userId}`)\r\n    .catch((e) => {});\r\n  if (res.status === 200) {\r\n    return res.data.name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport async function getIdFromUsername(\r\n  usernames: string | string[]\r\n): Promise<number> {\r\n  const _usernames: string[] = Array.isArray(usernames)\r\n    ? usernames\r\n    : [usernames];\r\n\r\n  const res: any = await axios\r\n    .post(\"https://users.roproxy.com/v1/usernames/users\", {\r\n      usernames: _usernames,\r\n      excludeBannedUsers: false,\r\n    })\r\n    .catch((e) => {});\r\n  const _data: any = res.data.data;\r\n\r\n  let results = _usernames.map((username) => {\r\n    return _data.find((result: any) => result.requestedUsername === username);\r\n  });\r\n\r\n  results = results.map((result) => (result !== undefined ? result.id : null));\r\n\r\n  return results.length > 1 ? results : results[0];\r\n}\r\n\r\nexport async function getBadgeAwardedTimestampts(\r\n  userId: number,\r\n  badgeIds: number | number[]\r\n): Promise<UserBadgeInfo[]> {\r\n  const _badgeIds: number[] = Array.isArray(badgeIds) ? badgeIds : [badgeIds];\r\n\r\n  if (await getUsernameFromId(userId)) {\r\n    const res: any = await axios\r\n      .get(\r\n        `https://badges.roproxy.com/v1/users/${userId}/badges/awarded-dates?badgeIds=${_badgeIds.join(\r\n          \",\"\r\n        )}`\r\n      )\r\n      .catch((e) => {});\r\n\r\n    return res.data.data;\r\n  } else {\r\n    return [];\r\n  }\r\n}\r\n",
      "start": 1705353510602,
      "end": 1705353510948,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1705353510948,
      "end": 1705353510948,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1705353510948,
      "end": 1705353510948,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1705353510948,
      "end": 1705353510948,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1705353510948,
      "end": 1705353510948,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import axios from \"axios\";\nexport async function getUsernameFromId(userId) {\n  const res = await axios.get(`https://users.roproxy.com/v1/users/${userId}`).catch((e) => {\n  });\n  if (res.status === 200) {\n    return res.data.name;\n  } else {\n    return \"\";\n  }\n}\nexport async function getIdFromUsername(usernames) {\n  const _usernames = Array.isArray(usernames) ? usernames : [usernames];\n  const res = await axios.post(\"https://users.roproxy.com/v1/usernames/users\", {\n    usernames: _usernames,\n    excludeBannedUsers: false\n  }).catch((e) => {\n  });\n  const _data = res.data.data;\n  let results = _usernames.map((username) => {\n    return _data.find((result) => result.requestedUsername === username);\n  });\n  results = results.map((result) => result !== void 0 ? result.id : null);\n  return results.length > 1 ? results : results[0];\n}\nexport async function getBadgeAwardedTimestampts(userId, badgeIds) {\n  const _badgeIds = Array.isArray(badgeIds) ? badgeIds : [badgeIds];\n  if (await getUsernameFromId(userId)) {\n    const res = await axios.get(\n      `https://badges.roproxy.com/v1/users/${userId}/badges/awarded-dates?badgeIds=${_badgeIds.join(\n        \",\"\n      )}`\n    ).catch((e) => {\n    });\n    return res.data.data;\n  } else {\n    return [];\n  }\n}\n",
      "start": 1705353510948,
      "end": 1705353511001,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/Andrew/Documents/GitHub/jtoh-xl-tower-tracker/utils/roblox.ts"
        ],
        "sourcesContent": [
          "import axios from \"axios\";\r\n\r\nexport type UserBadgeInfo = {\r\n  badgeId: number;\r\n  awardedDate: Date;\r\n};\r\n\r\nexport async function getUsernameFromId(userId: number): Promise<string> {\r\n  const res: any = await axios\r\n    .get(`https://users.roproxy.com/v1/users/${userId}`)\r\n    .catch((e) => {});\r\n  if (res.status === 200) {\r\n    return res.data.name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport async function getIdFromUsername(\r\n  usernames: string | string[]\r\n): Promise<number> {\r\n  const _usernames: string[] = Array.isArray(usernames)\r\n    ? usernames\r\n    : [usernames];\r\n\r\n  const res: any = await axios\r\n    .post(\"https://users.roproxy.com/v1/usernames/users\", {\r\n      usernames: _usernames,\r\n      excludeBannedUsers: false,\r\n    })\r\n    .catch((e) => {});\r\n  const _data: any = res.data.data;\r\n\r\n  let results = _usernames.map((username) => {\r\n    return _data.find((result: any) => result.requestedUsername === username);\r\n  });\r\n\r\n  results = results.map((result) => (result !== undefined ? result.id : null));\r\n\r\n  return results.length > 1 ? results : results[0];\r\n}\r\n\r\nexport async function getBadgeAwardedTimestampts(\r\n  userId: number,\r\n  badgeIds: number | number[]\r\n): Promise<UserBadgeInfo[]> {\r\n  const _badgeIds: number[] = Array.isArray(badgeIds) ? badgeIds : [badgeIds];\r\n\r\n  if (await getUsernameFromId(userId)) {\r\n    const res: any = await axios\r\n      .get(\r\n        `https://badges.roproxy.com/v1/users/${userId}/badges/awarded-dates?badgeIds=${_badgeIds.join(\r\n          \",\"\r\n        )}`\r\n      )\r\n      .catch((e) => {});\r\n\r\n    return res.data.data;\r\n  } else {\r\n    return [];\r\n  }\r\n}\r\n"
        ],
        "mappings": "AAAA,OAAO,WAAW;AAOlB,sBAAsB,kBAAkB,QAAiC;AACvE,QAAM,MAAW,MAAM,MACpB,IAAI,sCAAsC,MAAM,EAAE,EAClD,MAAM,CAAC,MAAM;AAAA,EAAC,CAAC;AAClB,MAAI,IAAI,WAAW,KAAK;AACtB,WAAO,IAAI,KAAK;AAAA,EAClB,OAAO;AACL,WAAO;AAAA,EACT;AACF;AAEA,sBAAsB,kBACpB,WACiB;AACjB,QAAM,aAAuB,MAAM,QAAQ,SAAS,IAChD,YACA,CAAC,SAAS;AAEd,QAAM,MAAW,MAAM,MACpB,KAAK,gDAAgD;AAAA,IACpD,WAAW;AAAA,IACX,oBAAoB;AAAA,EACtB,CAAC,EACA,MAAM,CAAC,MAAM;AAAA,EAAC,CAAC;AAClB,QAAM,QAAa,IAAI,KAAK;AAE5B,MAAI,UAAU,WAAW,IAAI,CAAC,aAAa;AACzC,WAAO,MAAM,KAAK,CAAC,WAAgB,OAAO,sBAAsB,QAAQ;AAAA,EAC1E,CAAC;AAED,YAAU,QAAQ,IAAI,CAAC,WAAY,WAAW,SAAY,OAAO,KAAK,IAAK;AAE3E,SAAO,QAAQ,SAAS,IAAI,UAAU,QAAQ,CAAC;AACjD;AAEA,sBAAsB,2BACpB,QACA,UAC0B;AAC1B,QAAM,YAAsB,MAAM,QAAQ,QAAQ,IAAI,WAAW,CAAC,QAAQ;AAE1E,MAAI,MAAM,kBAAkB,MAAM,GAAG;AACnC,UAAM,MAAW,MAAM,MACpB;AAAA,MACC,uCAAuC,MAAM,kCAAkC,UAAU;AAAA,QACvF;AAAA,MACF,CAAC;AAAA,IACH,EACC,MAAM,CAAC,MAAM;AAAA,IAAC,CAAC;AAElB,WAAO,IAAI,KAAK;AAAA,EAClB,OAAO;AACL,WAAO,CAAC;AAAA,EACV;AACF;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1705353511001,
      "end": 1705353511001,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1705353511001,
      "end": 1705353511001,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1705353511002,
      "end": 1705353511002,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1705353511002,
      "end": 1705353511002,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1705353511002,
      "end": 1705353511002,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1705353511002,
      "end": 1705353511002,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1705353511002,
      "end": 1705353511002,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1705353511003,
      "end": 1705353511003,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1705353511003,
      "end": 1705353511003,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1705353511003,
      "end": 1705353511003,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1705353511003,
      "end": 1705353511004,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1705353511004,
      "end": 1705353511004,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1705353511004,
      "end": 1705353511004,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1705353511004,
      "end": 1705353511004,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1705353511004,
      "end": 1705353511004,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1705353511004,
      "end": 1705353511004,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1705353511004,
      "end": 1705353511004,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1705353511004,
      "end": 1705353511004,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1705353511005,
      "end": 1705353511005,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1705353511005,
      "end": 1705353511008,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1705353511008,
      "end": 1705353511009,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1705353511009,
      "end": 1705353511009,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1705353511009,
      "end": 1705353511009,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1705353511009,
      "end": 1705353511009,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1705353511009,
      "end": 1705353511010,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1705353511010,
      "end": 1705353511010,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1705353511010,
      "end": 1705353511010,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1705353511010,
      "end": 1705353511010,
      "order": "normal"
    }
  ]
}
